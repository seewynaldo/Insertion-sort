The Insertion Sort algorithm works as follows: 
The first element in the array is considered sorted, and is used as a comparison point for subsequent elements. 
For each element in the unsorted portion of the array, starting from the second element:
The element is compared with each of the elements to its left in the sorted portion of the array.
If the element is smaller than the comparison element, the comparison element is shifted one position to the right to make room for the new element.
This process continues until the correct position for the new element is found.
The sorted portion of the array is increased by one element, and the process repeats until the entire array is sorted.
In the algorithm above, arr is the array to be sorted, and n is the number of elements in the array.
The function InsertionSort performs the insertion sort on the array and prints the sorted array.
The function main initializes the array and calls the InsertionSort function.
